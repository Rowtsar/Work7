using System.Collections;
using UnityEngine;

public class Timer : MonoBehaviour
{
    //private CreateCharacter _timeToCreateCharacter;

    //public int TimerSecond;

    //void Start()
    //{
    //    _timeToCreateCharacter = GetComponent<CreateCharacter>();
    //}

    //public IEnumerator TimerToCreateWarrior(int timeToCreate)
    //{
    //    while (true)
    //    {
    //        //int second = 0;

    //        yield return new WaitForSeconds(1);
    //        TimerSecond++;
    //        Debug.Log($" орутина выполн€етьс€ дл€ {timeToCreate}");
                
    //        if (TimerSecond == timeToCreate)
    //        {
    //            TimerSecond = 0;
    //            Debug.Log($" орутина закончилась дл€ {timeToCreate}");
    //            yield break;
    //        }
    //    }
    //}

    //public bool DeleteCoroutine()
    //{
    //    return true;
        
    //}
    //public IEnumerator TimerToCreateFarmer(int timeToCreate)
    //{
    //    while (true)
    //    {
    //        int second = 0;

    //        yield return new WaitForSeconds(1);
    //        second++;

    //        if (second == timeToCreate)
    //        {
    //            second = 0;
    //            yield break;
    //        }
    //    }
    //}

    //ƒублирование кода, как избавитьс€ от дубл€жа кода в случае с корутинами? ’отелось бы пон€ть как это все организовать через 1 корутину
    //ѕередавать данные сколько времени делаетьс€ воин запускать таймер на это врем€, отдать значение(например true) воину что б он выполн€л дальше код, но при этом
    //≈сли у нас создаетьс€ воин и фермер через 1 корутину, что б дл€ воина она остановилась , а дл€ фермера только после передачи значени€ фермеру




    // –азобратьс€ с остановкой корутин(ќставить 2 корутины). —делать анимацию создание персов. ƒоделать создание персов через врем€
}
